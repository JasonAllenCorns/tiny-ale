#!/usr/bin/env bash

set -x

COMMAND=$1

PROJECT=tiny-ale
API=${PROJECT}_web_1
UI=${PROJECT}_ux_1
DB=${PROJECT}_db_1
ADMINER=${PROJECT}_adminer_1

set COMPOSE_PROJECT_NAME=$PROJECT

createDb () {
  docker exec $API rake db:create
}

migrateDb () {
  docker exec $API rake db:migrate
}

dropDb () {
  docker exec -e DISABLE_DATABASE_ENVIRONMENT_CHECK=1 $API rake db:drop
}

seedDb () {
  docker exec $API rake db:seed
}

testPrepare () {
  docker exec $API rake db:test:prepare
}

deleteDbVolume () {
  docker volume remove $PROJECT_tinysis_data
}

shell:api () {
  docker exec -it $API bash
} 

shell:ui () {
  docker exec -it $UI bash
}

server () {
  docker exec -it $API rm -rf /api/tmp/pids/server.pid && rails s
}

initDb () {
  dropDb
  createDb
  migrateDb
  seedDb
  testPrepare
}

reset () {
  stopContainers
  removeContainers
  removeImages
}

stopContainers () {
  docker stop $API $DB $ADMINER $UI
}

removeContainers () {
  docker rm $API $DB $ADMINER $UI
}

removeImages () {
  docker rmi ${PROJECT}_web ${PROJECT}_db ${PROJECT}_adminer ${PROJECT}_ux
}

# if this is not working, you need to get your AWS profile set up in 
# ~/.aws/credentials. Contact artzt@juniperswordplay.com for access.
#
getSecrets () {
  aws s3 cp --profile=tinysis-devtest s3://tinysis-devtest/api api --recursive
}

build () {
  docker-compose -p $PROJECT up --build
}

log () {
  docker exec -it $API tail -f log/*
}

test:api () {
  docker exec -e RAILS_ENV=test $API bundle exec rspec
}

usage () {
  echo "tiny <command>"
  echo ""
  echo "Commands:"
  echo "---------"
  echo "getSecrets | generally one-time S3 download of any dev secrets files - requires AWS profile and access key"
  echo "build      | applies docker-compose to start the API stack"
  echo "initDb     | sets up the development database; will delete the existing data if it exists"
  echo "server     | starts the development server"
  echo "shell      | opens a bash shell on the Rails API container"
  echo "log        | tail the production log"
  echo "reset      | deletes the docker images for the API and DB"
  echo "test:api   | runs test suite for API"
}

case "$COMMAND" in
  "getSecrets"|"initDb"|"build"|"server"|"shell:ui"|"shell:api"|"log"|"reset"|"test:api")
      $COMMAND
      ;;
  *)
      usage
esac